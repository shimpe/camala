<?xml version="1.0" encoding="UTF-8"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
     width="${spec['Global']['W']}" height="${spec['Global']['H']}"
     viewBox="${-int(spec['Global']['W'])//2} ${-int(spec['Global']['H'])//2} ${spec['Global']['W']} ${spec['Global']['H']}">
% if thefilters:
<defs>
% for line in spec['Caption']:
% for filter in thefilters:
${thefilters[filter].svg_template.replace("${line}", line)}
% endfor
% endfor
</defs>
% endif
% if spec['Styles']:
<style type="text/css">
<![CDATA[
    % for style in spec['Styles']:
  .${style} {
       % for property in spec['Styles'][style]['StyleProperties']:
       % if "${" in spec['Styles'][style]['StyleProperties'][property]:
       ${property} : ${spec['Styles'][style]['StyleProperties'][property].replace("}","_for_style_"+style+"}") | x};
       % else:
       ${property} : ${spec['Styles'][style]['StyleProperties'][property] | x};
       % endif
       % endfor
  }
    % endfor
]]>
</style>
% endif
% for line in spec['Caption']:
% if x is not None and y is not None:
    <text x="<%text>$</%text>{${line}_x}" y="<%text>$</%text>{${line}_y}"\
% if 'CaptionSvgAttribute' in spec['Caption'][line]:
% for cp in spec['Caption'][line]['CaptionSvgAttribute']:
 ${cp}="${spec['Caption'][line]['CaptionSvgAttribute'][cp].replace("}","_for_line_"+line+"}") | x}"\
% endfor
% endif
% if 'Filter' in spec['Caption'][line] and 'filter' in spec['Caption'][line]['Filter']:
 filter="url(#${spec['Caption'][line]['Filter']['filter'][len('${Filters.'):-1]}_${line})"\
% endif
 >
% for segment in spec['Caption'][line]['Segments']:
% if 'style' in spec['Caption'][line]['Segments'][segment]:
        <tspan xml:space="preserve" class="${spec['Caption'][line]['Segments'][segment]['style'][9:-1]}"\
% if 'SegmentSvgAttribute' in spec['Caption'][line]['Segments'][segment]:
% for cp in spec['Caption'][line]['Segments'][segment]['SegmentSvgAttribute']:
 ${cp}="${spec['Caption'][line]['Segments'][segment]['SegmentSvgAttribute'][cp].replace("}", "_for_line_" + line + "_for_segment_" + segment + "}") | x}"\
% endfor
% endif
 ><%text>$</%text>{text_${line}_${segment}}</tspan>
% else:
        <tspan xml:space="preserve" \
% if 'SegmentSvgAttribute' in spec['Caption'][line]['Segments'][segment]:
% for cp in spec['Caption'][line]['Segments'][segment]['SegmentSvgAttribute']:
 ${cp}="${spec['Caption'][line]['Segments'][segment]['SegmentSvgAttribute'][cp] | x}"\
% endfor
% endif
 > <%text>$</%text>{text_${line}_${segment}}</tspan>
% endif
% endfor
</text>
% endif
% endfor
</svg>

